{"hash":"0cf97255a3586de6cd4f9cfa56e8593f67ba5cd7","data":{"markdownPage":{"id":"04073e1662d5ec3669edf750f9c3ec36","title":"Create a shortcode","description":"Create a shortcode","path":"/docs/howto/theming/create-a-shortcode/","timeToRead":3,"content":"<h1 id=\"create-a-shortcode\"><a href=\"#create-a-shortcode\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create a shortcode</h1>\n<p>To understand what are shortcodes, <a href=\"/docs/architecture/theming/#shortcodes\">read this section</a>.</p>\n<h2 id=\"configuration\"><a href=\"#configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configuration</h2>\n<p>In your <code>config/packages/numbernine.yaml</code> file, configure the path where to store shortcodes.\nBy default it's <code>src/Shortcode/</code>, if this path suits you then skip this step.</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">numbernine</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">shortcodes_path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'src/My/Path/To/Shortcodes/'</span></code></pre>\n<h2 id=\"using-cli\"><a href=\"#using-cli\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Using CLI</h2>\n<p>Run this command in your terminal:</p>\n<pre class=\"language-text\"><code class=\"language-text\">docker-compose exec php bin/console numbernine:make:shortcode</code></pre>\n<p>You'll be asked several questions. For demonstration purpose, we'll use default values in the\nfollowing steps.</p>\n<h2 id=\"file-structure\"><a href=\"#file-structure\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>File structure</h2>\n<p>After answering all the questions, you'll get 3 new files:</p>\n<ul>\n<li>\n<p><code>src/Shortcode/TurtleShortcode.php</code></p>\n<p>This is the controller of the shortcode template.</p>\n</li>\n<li>\n<p><code>src/Shortcode/TurtleShortcode/template.html.twig</code></p>\n<p>This is the template that will be rendered to the final user.</p>\n</li>\n<li>\n<p><code>src/Shortcode/TurtleShortcode/template.vue.twig</code></p>\n<p>This is the template used in the page builder. It should be as close as the html template, although\nit's not always easy or possible.</p>\n</li>\n</ul>\n<h2 id=\"render-a-shortcode-from-twig\"><a href=\"#render-a-shortcode-from-twig\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Render a shortcode from Twig</h2>\n<p>To render the shortcode, use this Twig function:</p>\n<pre class=\"language-twig\"><code class=\"language-twig\"><span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">N9_shortcode</span><span class=\"token punctuation\">(</span><span class=\"token string\"><span class=\"token punctuation\">'</span>[turtle title=\"My custom title\"]<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">)</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span></code></pre>\n<p>If you don't specify the parameters, the shortcode defaults values will be used instead.</p>\n<p>Note that this function doesn't necessarily take only one shortcode. You can pass it a full text with any\nnumber of shortcodes, even nested shortcodes, and it will render everything:</p>\n<pre class=\"language-twig\"><code class=\"language-twig\"><span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">N9_shortcode</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\"><span class=\"token punctuation\">'</span>This is some text.<span class=\"token punctuation\">'</span></span> <span class=\"token operator\">~</span>\n    <span class=\"token string\"><span class=\"token punctuation\">'</span>[turtle title=\"My custom title\"]<span class=\"token punctuation\">'</span></span> <span class=\"token operator\">~</span>\n    <span class=\"token string\"><span class=\"token punctuation\">'</span>And some more text.<span class=\"token punctuation\">'</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span></code></pre>\n<h2 id=\"the-shortcode-class\"><a href=\"#the-shortcode-class\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The shortcode class</h2>\n<h3 id=\"overview\"><a href=\"#overview\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Overview</h3>\n<p>Have a look at the whole class in its minimal form.</p>\n<p>Every shortcode must implement <code>configureParameters()</code> and <code>processParameters()</code> methods from <code>ShortcodeInterface</code>.</p>\n<p>Editable shortcodes, those who are available in the page builder, must implement <code>buildPageBuilderForm()</code> from <code>EditableShortcodeInterface</code>.</p>\n<pre class=\"language-php\"><code class=\"language-php\"><span class=\"token doc-comment comment\">/**\n * @Shortcode(name=\"turtle\", label=\"Turtle\", icon=\"mdi-turtle\")\n */</span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TurtleShortcode</span> <span class=\"token keyword\">implements</span>\n    <span class=\"token class-name\">ShortcodeInterface</span><span class=\"token punctuation\">,</span>\n    EditableShortcodeInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureParameters</span><span class=\"token punctuation\">(</span>OptionsResolver <span class=\"token variable\">$resolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$resolver</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token single-quoted-string string\">'title'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'Welcome to the Turtle Age Show'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token single-quoted-string string\">'age'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">processParameters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">array</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token single-quoted-string string\">'title'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'title'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token single-quoted-string string\">'age'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">buildPageBuilderForm</span><span class=\"token punctuation\">(</span>PageBuilderFormBuilderInterface <span class=\"token variable\">$builder</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$builder</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'title'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'age'</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">SliderControl<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"shortcode-annotation\"><a href=\"#shortcode-annotation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shortcode annotation</h3>\n<p>Every shortcode must have the <code>@Shortcode</code> annotation to specify the name that the\nend-user will use. In our example, we want the shortcode to be called with <code>[turtle]</code>,\ntherefore the name we'll give is <code>turtle</code>.</p>\n<p>The <code>label</code> parameter defines the name that will appear in page builder, along with\nthe <code>icon</code> parameter.</p>\n<p>You can look for icons on one of these websites:</p>\n<ul>\n<li><a href=\"https://materialdesignicons.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://materialdesignicons.com/</a></li>\n<li><a href=\"https://material.io/\" target=\"_blank\" rel=\"noopener noreferrer\">https://material.io/</a></li>\n</ul>\n<h3 id=\"configure-parameters\"><a href=\"#configure-parameters\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure parameters</h3>\n<p>You can add as many parameters as you want to your shortcode.\nTo do so, add them in the <code>configureParameters()</code> method:</p>\n<pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureParameters</span><span class=\"token punctuation\">(</span>OptionsResolver <span class=\"token variable\">$resolver</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$resolver</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token single-quoted-string string\">'my_parameter'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'Default value'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"send-parameters-to-the-twig-template\"><a href=\"#send-parameters-to-the-twig-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Send parameters to the Twig template</h3>\n<p>You can send parameters to Twig that are completely different from the shortcode parameters.\nThis allow for complex operations just like you would do in a traditional controller.</p>\n<p>For example, you could inject <code>FormFactoryInterface</code> and create a form, then handling its submission\nby listening to <code>RequestEvent::class</code>.</p>\n<pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">processParameters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">array</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token single-quoted-string string\">'twig_variable'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'my_parameter'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token single-quoted-string string\">'form'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token this\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">createView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"twig-template\"><a href=\"#twig-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Twig template</h3>\n<p>To stay with our TurtleShortcode example, here's what the template look like for final rendering:</p>\n<pre class=\"language-twig\"><code class=\"language-twig\"><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span></span><span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">title</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>The turtle is</span> <span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">age</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span> <span class=\"token other\">years-old.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></span></code></pre>\n<h2 id=\"editable-shortcodes\"><a href=\"#editable-shortcodes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Editable shortcodes</h2>\n<h3 id=\"page-builder-demonstration\"><a href=\"#page-builder-demonstration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Page builder demonstration</h3>\n<p>NumberNine admin features a page builder that will interpret your shortcodes and present them\nto the end-user with a user friendly graphic interface.</p>\n<p>As an example, here's what our TurtleShortcode looks like in the page builder:</p>\n<img src=\"/screenshots/turtle_shortcode.gif\" alt=\"NumberNine TurtleShortcode demo\">\n<br>\n<p>This is made possible with the other template: <code>TurtleShortcode/template.vue.html</code>.\nThis template is a portion of a Vue component, so it's using Vue syntax.</p>\n<p>You're only given access to the template of the component and not the script, which is automated.</p>\n<h3 id=\"considerations\"><a href=\"#considerations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Considerations</h3>\n<ul>\n<li>Editable shortcodes must implement <code>EditableShortcodeInterface</code></li>\n<li>Templates must have only one root element, so if you don't, embed everything into a <code>&#x3C;div>...&#x3C;/div></code></li>\n<li>Shortcode parameters are available in the <code>parameters</code> Vue variable</li>\n<li>Computed variables generated by some page builder controls are available in the <code>computed</code> Vue variable</li>\n</ul>\n<h3 id=\"vue-template\"><a href=\"#vue-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue template</h3>\n<p>To avoid conflicting Twig and Vue syntax, embed Vue code into <code>{% verbatim %}...{% endverbatim %}</code> tag.</p>\n<pre class=\"language-twig\"><code class=\"language-twig\"><span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{%</span> <span class=\"token keyword\">verbatim</span></span> <span class=\"token rd\"><span class=\"token punctuation\">%}</span></span></span>\n<span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span></span><span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">parameters</span><span class=\"token punctuation\">.</span><span class=\"token property\">title</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span><span class=\"token other\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>The turtle is</span> <span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{{</span></span> <span class=\"token property\">parameters</span><span class=\"token punctuation\">.</span><span class=\"token property\">age</span> <span class=\"token rd\"><span class=\"token punctuation\">}}</span></span></span> <span class=\"token other\">years-old.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></span>\n<span class=\"token tag\"><span class=\"token ld\"><span class=\"token punctuation\">{%</span> <span class=\"token keyword\">endverbatim</span></span> <span class=\"token rd\"><span class=\"token punctuation\">%}</span></span></span></code></pre>\n","sidebar":"docs","next":"","prev":"/docs/howto/theming/create-a-component/","headings":[{"depth":1,"value":"Create a shortcode","anchor":"#create-a-shortcode"},{"depth":2,"value":"Configuration","anchor":"#configuration"},{"depth":2,"value":"Using CLI","anchor":"#using-cli"},{"depth":2,"value":"File structure","anchor":"#file-structure"},{"depth":2,"value":"Render a shortcode from Twig","anchor":"#render-a-shortcode-from-twig"},{"depth":2,"value":"The shortcode class","anchor":"#the-shortcode-class"},{"depth":3,"value":"Overview","anchor":"#overview"},{"depth":3,"value":"Shortcode annotation","anchor":"#shortcode-annotation"},{"depth":3,"value":"Configure parameters","anchor":"#configure-parameters"},{"depth":3,"value":"Send parameters to the Twig template","anchor":"#send-parameters-to-the-twig-template"},{"depth":3,"value":"Twig template","anchor":"#twig-template"},{"depth":2,"value":"Editable shortcodes","anchor":"#editable-shortcodes"},{"depth":3,"value":"Page builder demonstration","anchor":"#page-builder-demonstration"},{"depth":3,"value":"Considerations","anchor":"#considerations"},{"depth":3,"value":"Vue template","anchor":"#vue-template"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/docs/howto/user-management/create-a-capability/","title":"Create a capability"}},{"node":{"path":"/docs/howto/theming/create-a-shortcode/","title":"Create a shortcode"}},{"node":{"path":"/docs/howto/theming/create-a-component/","title":"Create a component"}},{"node":{"path":"/docs/howto/content/create-a-content-type/","title":"Create a content type"}},{"node":{"path":"/docs/reference/events/","title":"Events"}},{"node":{"path":"/docs/architecture/user-management/","title":"User management"}},{"node":{"path":"/docs/architecture/theming/","title":"Theming"}},{"node":{"path":"/docs/architecture/symfony/","title":"Symfony 5.1+"}},{"node":{"path":"/docs/architecture/content-types/","title":"Content types"}},{"node":{"path":"/docs/screenshots/","title":"Screenshots"}},{"node":{"path":"/docs/installation/","title":"Installation"}},{"node":{"path":"/docs/","title":"Introduction"}},{"node":{"path":"/docs/first-steps/","title":"First steps"}},{"node":{"path":"/docs/docker/","title":"Docker services"}}]}},"context":{}}
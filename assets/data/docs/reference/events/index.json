{"hash":"c2c7a233e398af6701af9cfa56e8593f67ba5cd7","data":{"markdownPage":{"id":"02c5f90a7669f7b2d0b609895223a5e6","title":"Events","description":"Events reference","path":"/docs/reference/events/","timeToRead":3,"content":"<h1 id=\"events\"><a href=\"#events\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Events</h1>\n<p>NumberNine dispatches lots of events to let you hook into the default behavior and\nmodify it to your needs.</p>\n<p>Events are objects containing data that you can change.</p>\n<p>To intercept these events, simply create a service implementing Symfony's <code>EventSubscriberInterface</code>.</p>\n<p>As an example:</p>\n<pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>EventSubscriber</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">NumberNine<span class=\"token punctuation\">\\</span>Event<span class=\"token punctuation\">\\</span>HeadEvent</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>EventDispatcher<span class=\"token punctuation\">\\</span>EventSubscriberInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeadEventSubscriber</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">EventSubscriberInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getSubscribedEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">array</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token scope\">HeadEvent<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'alterHeadEvent'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">alterHeadEvent</span><span class=\"token punctuation\">(</span>HeadEvent <span class=\"token variable\">$event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// do what you need here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"theme-events\"><a href=\"#theme-events\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Theme events</h2>\n<h3 id=\"headevent\"><a href=\"#headevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HeadEvent</h3>\n<p><code>HeadEvent</code> is dispatched when the theme calls the Twig function <code>N9_head()</code>.</p>\n<p>Although you could directly modify <code>base.html.twig</code> to your needs, it defeats extensibility.\nThanks to this event, plugins or themes can add whatever they need in the head section of\nthe page.</p>\n<p>NumberNine itself hooks into <code>HeadEvent</code> and dispatches other events, as seen below.</p>\n<h3 id=\"headtitleevent\"><a href=\"#headtitleevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HeadTitleEvent</h3>\n<p><code>HeadTitleEvent</code> contains the title of the page.</p>\n<h3 id=\"headstylesheetsevent\"><a href=\"#headstylesheetsevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HeadStylesheetsEvent</h3>\n<p><code>HeadStylesheetsEvent</code> contains a list of rendered HTML style tags.</p>\n<h3 id=\"headthemecustomstylesevent\"><a href=\"#headthemecustomstylesevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HeadThemeCustomStylesEvent</h3>\n<p><code>HeadThemeCustomStylesEvent</code> contains a CSS dynamic sheet that is rendered after all included sheets.\nThis is useful to let the user override some properties.</p>\n<h3 id=\"headerscriptsevent\"><a href=\"#headerscriptsevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HeaderScriptsEvent</h3>\n<p><code>HeadThemeCustomStylesEvent</code> contains a list of rendered HTML script tags.</p>\n<h3 id=\"footerevent\"><a href=\"#footerevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>FooterEvent</h3>\n<p><code>FooterEvent</code> is dispatched when the theme calls the Twig function <code>N9_footer()</code>.</p>\n<h2 id=\"form-events\"><a href=\"#form-events\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Form events</h2>\n<h3 id=\"loginpathsevent\"><a href=\"#loginpathsevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LoginPathsEvent</h3>\n<p><code>LoginPathsEvent</code> contains the list of pages that host a login form. This is used by the login authenticator\nto know if it's supposed to handle login on your page.</p>\n<h3 id=\"registrationformbuilderevent\"><a href=\"#registrationformbuilderevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RegistrationFormBuilderEvent</h3>\n<p><code>RegistrationFormBuilderEvent</code> contains the registration form builder so you can modify the registration\nbehavior.</p>\n<h3 id=\"registrationformsuccessevent\"><a href=\"#registrationformsuccessevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RegistrationFormSuccessEvent</h3>\n<p><code>RegistrationFormSuccessEvent</code> is dispatched when the registration is successful and the user logged in.\nNumberNine's default behavior is to listen to this even then notify the user by email.</p>\n<h2 id=\"registration-events\"><a href=\"#registration-events\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Registration events</h2>\n<h3 id=\"areasregistrationevent\"><a href=\"#areasregistrationevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AreasRegistrationEvent</h3>\n<p><code>AreasRegistrationEvent</code> lets you add areas to your theme. If you want to know more about areas, please\n<a href=\"/docs/architecture/theming/#areas\">read this page</a>.</p>\n<h3 id=\"capabilitieslistevent\"><a href=\"#capabilitieslistevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CapabilitiesListEvent</h3>\n<p><code>CapabilitiesListEvent</code> contains the full list of capabilities. To add a new capability, follow\n<a href=\"/docs/howto/user-management/create-a-capability/\">this guide</a>.</p>\n<h3 id=\"contenttyperegistrationevent\"><a href=\"#contenttyperegistrationevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ContentTypeRegistrationEvent</h3>\n<p><code>ContentTypeRegistrationEvent</code> contains content types that will be used in your app. To register new\ncontent types, follow <a href=\"/docs/howto/content/create-a-content-type/\">this guide</a>.</p>\n<h3 id=\"imagesizesevent\"><a href=\"#imagesizesevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ImageSizesEvent</h3>\n<p><code>ImageSizesEvent</code> contains the list of the thumbnails sizes that need to be generated. You can add new\nsizes and they will be automatically generated when you regenerate the thumbnails.</p>\n<h3 id=\"routeregistrationevent\"><a href=\"#routeregistrationevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>RouteRegistrationEvent</h3>\n<p><code>RouteRegistrationEvent</code> contains the list of registered routes. Listening to this event enables you\nto create dynamic routes.</p>\n<h2 id=\"general-events\"><a href=\"#general-events\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>General events</h2>\n<h3 id=\"componentprocessparametersevent\"><a href=\"#componentprocessparametersevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ComponentProcessParametersEvent</h3>\n<p><code>ComponentProcessParametersEvent</code> is useful if you need to alter the content of a\n<a href=\"/docs/architecture/theming/#components\">component</a>'s parameters just before it's get rendered with Twig.</p>\n<h3 id=\"contententityshowforwardevent\"><a href=\"#contententityshowforwardevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ContentEntityShowForwardEvent</h3>\n<p><code>ContentEntityShowForwardEvent</code> contains the response that should render the current entity. You can alter\nthis response by forwarding it to another controller. Use <code>ForwardRequestTrait</code> to ease forwarding.</p>\n<h3 id=\"currentcontententityevent\"><a href=\"#currentcontententityevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CurrentContentEntityEvent</h3>\n<p><code>CurrentContentEntityEvent</code> is dispatched before the rendering of the page. In a service or shortcode,\nlisten to this event to know what you're dealing with.</p>\n<h3 id=\"currentrequesttermevent\"><a href=\"#currentrequesttermevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CurrentRequestTermEvent</h3>\n<p><code>CurrentRequestTermEvent</code> is dispatched on term index pages before the rendering of the page. In a service\nor shortcode, listen to this event to know what you're dealing with.</p>\n<h3 id=\"mainloopqueryevent\"><a href=\"#mainloopqueryevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MainLoopQueryEvent</h3>\n<p><code>MainLoopQueryEvent</code> contains the query builder of the current page query for a given content type. Listen\nto this event if you need to add or alter criterias.</p>\n<h3 id=\"paginatorevent\"><a href=\"#paginatorevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>PaginatorEvent</h3>\n<p><code>PaginatorEvent</code> contains the paginator of the current page. Useful if you need it, for example in a shortcode.</p>\n<h3 id=\"shortcodeprocessparametersevent\"><a href=\"#shortcodeprocessparametersevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ShortcodeProcessParametersEvent</h3>\n<p><code>ShortcodeProcessParametersEvent</code> is useful if you need to alter the content of a\n<a href=\"/docs/architecture/theming/#shortcodes\">shortcode</a>'s parameters just before it's get rendered with Twig.</p>\n<h3 id=\"templatetorenderevent\"><a href=\"#templatetorenderevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>TemplateToRenderEvent</h3>\n<p><code>TemplateToRenderEvent</code> contains the current Twig template about to be rendered. You can change the template to\nrender depending on your needs. As an example, NumberNine alters the template if it detects that the <code>My account</code>\nis about to be rendered.</p>\n<h3 id=\"updatecontententityevent\"><a href=\"#updatecontententityevent\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>UpdateContentEntityEvent</h3>\n<p><code>UpdateContentEntityEvent</code> is dispatched just before a content entity is about to be saved in database from the\nadmin panel. Use it to apply extra modifications.</p>\n","sidebar":"docs","next":"","prev":"/docs/howto/user-management/create-a-capability/","headings":[{"depth":1,"value":"Events","anchor":"#events"},{"depth":2,"value":"Theme events","anchor":"#theme-events"},{"depth":3,"value":"HeadEvent","anchor":"#headevent"},{"depth":3,"value":"HeadTitleEvent","anchor":"#headtitleevent"},{"depth":3,"value":"HeadStylesheetsEvent","anchor":"#headstylesheetsevent"},{"depth":3,"value":"HeadThemeCustomStylesEvent","anchor":"#headthemecustomstylesevent"},{"depth":3,"value":"HeaderScriptsEvent","anchor":"#headerscriptsevent"},{"depth":3,"value":"FooterEvent","anchor":"#footerevent"},{"depth":2,"value":"Form events","anchor":"#form-events"},{"depth":3,"value":"LoginPathsEvent","anchor":"#loginpathsevent"},{"depth":3,"value":"RegistrationFormBuilderEvent","anchor":"#registrationformbuilderevent"},{"depth":3,"value":"RegistrationFormSuccessEvent","anchor":"#registrationformsuccessevent"},{"depth":2,"value":"Registration events","anchor":"#registration-events"},{"depth":3,"value":"AreasRegistrationEvent","anchor":"#areasregistrationevent"},{"depth":3,"value":"CapabilitiesListEvent","anchor":"#capabilitieslistevent"},{"depth":3,"value":"ContentTypeRegistrationEvent","anchor":"#contenttyperegistrationevent"},{"depth":3,"value":"ImageSizesEvent","anchor":"#imagesizesevent"},{"depth":3,"value":"RouteRegistrationEvent","anchor":"#routeregistrationevent"},{"depth":2,"value":"General events","anchor":"#general-events"},{"depth":3,"value":"ComponentProcessParametersEvent","anchor":"#componentprocessparametersevent"},{"depth":3,"value":"ContentEntityShowForwardEvent","anchor":"#contententityshowforwardevent"},{"depth":3,"value":"CurrentContentEntityEvent","anchor":"#currentcontententityevent"},{"depth":3,"value":"CurrentRequestTermEvent","anchor":"#currentrequesttermevent"},{"depth":3,"value":"MainLoopQueryEvent","anchor":"#mainloopqueryevent"},{"depth":3,"value":"PaginatorEvent","anchor":"#paginatorevent"},{"depth":3,"value":"ShortcodeProcessParametersEvent","anchor":"#shortcodeprocessparametersevent"},{"depth":3,"value":"TemplateToRenderEvent","anchor":"#templatetorenderevent"},{"depth":3,"value":"UpdateContentEntityEvent","anchor":"#updatecontententityevent"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/docs/howto/user-management/create-a-capability/","title":"Create a capability"}},{"node":{"path":"/docs/howto/theming/create-a-shortcode/","title":"Create a shortcode"}},{"node":{"path":"/docs/howto/theming/create-a-component/","title":"Create a component"}},{"node":{"path":"/docs/howto/content/create-a-content-type/","title":"Create a content type"}},{"node":{"path":"/docs/reference/events/","title":"Events"}},{"node":{"path":"/docs/architecture/user-management/","title":"User management"}},{"node":{"path":"/docs/architecture/theming/","title":"Theming"}},{"node":{"path":"/docs/architecture/symfony/","title":"Symfony 5.1+"}},{"node":{"path":"/docs/architecture/content-types/","title":"Content types"}},{"node":{"path":"/docs/screenshots/","title":"Screenshots"}},{"node":{"path":"/docs/installation/","title":"Installation"}},{"node":{"path":"/docs/","title":"Introduction"}},{"node":{"path":"/docs/first-steps/","title":"First steps"}},{"node":{"path":"/docs/docker/","title":"Docker services"}}]}},"context":{}}
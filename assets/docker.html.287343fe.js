import{_ as t,r as i,o as r,c as l,a as n,b as a,F as c,e as o,d as e}from"./app.8aa8894e.js";const p={},d=o(`<h1 id="docker-services" tabindex="-1"><a class="header-anchor" href="#docker-services" aria-hidden="true">#</a> Docker services</h1><p>NumberNine&#39;s default installation relies on Docker to create a fully operational Docker development environment.</p><p>If you&#39;re not already familiar with Docker, see it as a kind of WAMP, XAMPP, MAMP, Laragon or any bundled development tool. Although you shouldn&#39;t need too much of Docker knowledge to work on your NumberNine project, it may come handy when troubleshooting. See below some command examples that should get you started quickly.</p><p>This is the list of the installed services.</p><h2 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> PHP</h2><p>The PHP container is loaded with some useful extensions and development tools.</p><ul><li>PHP 8.1</li><li>APCu</li><li>Xdebug 3</li><li>Composer 2</li><li>GNU Make</li><li>OPcache</li><li>Cachetool (clear OPcache and ACPu from CLI)</li><li>Blackfire probe</li></ul><p>Connect to the container using this command:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker compose exec php bash
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You&#39;ll see a bash prompt inside which you can run Symfony or Cachetool commands. Type <code>exit</code> to return to your terminal session.</p><p>Alternatively, if you just want to run a single command, use this syntax:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker compose exec php [here the Linux command you want to run]
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>For example:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker compose exec php bin/console list
docker compose exec php composer update
docker compose exec php cachetool opcache:status
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><p>Nginx is running with a SSL connection on localhost. A self-signed certificate is created during installation.</p><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><p>NumberNine is specifically designed to run on MySQL, taking advantage of the JSON features. Although it should work fine on MariaDB or SQLite, it hasn&#39;t been tested and it&#39;s not recommended to change.</p><p>MySQL is running in version 8.</p><h2 id="blackfire" tabindex="-1"><a class="header-anchor" href="#blackfire" aria-hidden="true">#</a> Blackfire</h2>`,20),u=e("To make Blackfire work, you need to register an account on "),h={href:"https://blackfire.io",target:"_blank",rel:"noopener noreferrer"},m=e("blackfire.io"),b=e("."),k=e("Once your account is created, create 4 environment variables in your "),_=n("code",null,"~/.bashrc",-1),f=e(" file with the values found in "),y={href:"https://blackfire.io/my/settings/credentials",target:"_blank",rel:"noopener noreferrer"},g=e("your account settings"),x=e("."),v=o(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_CLIENT_ID</span><span class="token operator">=</span>yourkey
<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_CLIENT_TOKEN</span><span class="token operator">=</span>yourkey
<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_SERVER_ID</span><span class="token operator">=</span>yourkey
<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_SERVER_TOKEN</span><span class="token operator">=</span>yourkey
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Modify <code>docker-compose.yml</code> to add this key under <code>blackfire</code> service (leave the tildes):</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>    <span class="token key atrule">blackfire</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token key atrule">environment</span><span class="token punctuation">:</span>
            <span class="token key atrule">BLACKFIRE_CLIENT_ID</span><span class="token punctuation">:</span> <span class="token null important">~</span>
            <span class="token key atrule">BLACKFIRE_CLIENT_TOKEN</span><span class="token punctuation">:</span> <span class="token null important">~</span>
            <span class="token key atrule">BLACKFIRE_SERVER_ID</span><span class="token punctuation">:</span> <span class="token null important">~</span>
            <span class="token key atrule">BLACKFIRE_SERVER_TOKEN</span><span class="token punctuation">:</span> <span class="token null important">~</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,3),E=e("Finally, "),N={href:"https://blackfire.io/docs/profiling-cookbooks/profiling-http-via-browser",target:"_blank",rel:"noopener noreferrer"},L=e("install the Chrome or Firefox extension"),C=e(" and you're ready to profile your website."),I=o(`<h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><p>Symfony sessions and app cache is stored in a Redis database. If you need to clear the Redis cache, run this command:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker compose exec redis redis-cli flushall
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="maildev" tabindex="-1"><a class="header-anchor" href="#maildev" aria-hidden="true">#</a> Maildev</h2>`,4),w=e("As a mail catcher, NumberNine is bundled with Maildev which is a joy to use. By default, the mailbox interface will be running on port "),R={href:"http://localhost:8010/",target:"_blank",rel:"noopener noreferrer"},A=e("http://localhost:8010/"),B=e(" unless you change the port in "),S=n("code",null,"docker-compose.yml",-1),P=e("."),F=n("p",null,"Every mail sent by NumberNine will appear in your Maildev inbox.",-1);function M(T,K){const s=i("ExternalLinkIcon");return r(),l(c,null,[d,n("p",null,[u,n("a",h,[m,a(s)]),b]),n("p",null,[k,_,f,n("a",y,[g,a(s)]),x]),v,n("p",null,[E,n("a",N,[L,a(s)]),C]),I,n("p",null,[w,n("a",R,[A,a(s)]),B,S,P]),F],64)}var O=t(p,[["render",M]]);export{O as default};

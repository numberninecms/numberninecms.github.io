import{_ as l,r as a,o as c,c as i,a as s,b as t,w as u,F as r,d as n,e}from"./app.c874ede5.js";var k="/images/screenshots/howto_content_type_roles.jpg",d="/images/screenshots/howto_content_type_menu.jpg",g="/images/screenshots/howto_content_type_index_template.jpg",m="/images/screenshots/howto_content_type_tab_form.jpg",b="/images/screenshots/howto_content_type_sidebar.jpg";const h={},y=s("h1",{id:"create-a-content-type",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#create-a-content-type","aria-hidden":"true"},"#"),n(" Create a content type")],-1),w=n("To understand what are content types, "),f=n("read this page"),_=n("."),v=e(`<h2 id="define-your-needs" tabindex="-1"><a class="header-anchor" href="#define-your-needs" aria-hidden="true">#</a> Define your needs</h2><p>The first thing to consider is: do you need a new Doctrine entity class? It really depends if you need more fields that can&#39;t be covered by the JSON custom fields.</p><p>As an example, we&#39;ll want to create a portfolio with photo galleries, but we also want our blog with standard articles, unrelated to the galleries.</p><p>In this case, our gallery can be a simple <code>[gallery]</code> shortcode placed inside the editor: no need to create an entity as we already have everything.</p><p>So we need to create:</p><ul><li>A page named <code>Portfolio</code> which will be our paginated galleries archive</li><li>A content type <code>photo_gallery</code></li></ul><h2 id="register-a-new-content-type" tabindex="-1"><a class="header-anchor" href="#register-a-new-content-type" aria-hidden="true">#</a> Register a new content type</h2><p>To register our new content type, create a new file <code>src/EventSubscriber/ContentTypeRegistrationEventSubscriber.php</code>:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>EventSubscriber</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Event<span class="token punctuation">\\</span>ContentTypeRegistrationEvent</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Content<span class="token punctuation">\\</span>ContentType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>EventDispatcher<span class="token punctuation">\\</span>EventSubscriberInterface</span><span class="token punctuation">;</span>

<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">ContentTypeRegistrationEventSubscriber</span> <span class="token keyword">implements</span> <span class="token class-name">EventSubscriberInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">getSubscribedEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token class-name static-context">ContentTypeRegistrationEvent</span><span class="token operator">::</span><span class="token keyword">class</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;register&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ContentTypeRegistrationEvent</span> <span class="token variable">$event</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$event</span><span class="token operator">-&gt;</span><span class="token function">addContentType</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">ContentType</span><span class="token punctuation">(</span>
                <span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;photo_gallery&#39;</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;entity_class_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;permalink&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;/photo-gallery/{slug}&#39;</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;icon&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mdi-folder-multiple-image&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="assign-capabilities-to-roles" tabindex="-1"><a class="header-anchor" href="#assign-capabilities-to-roles" aria-hidden="true">#</a> Assign capabilities to roles</h2><p>When you register a new content type, some capababilities are automatically generated.</p><p>To be able to edit a page, you&#39;ll have to go to the administration panel under <code>Users &gt; Roles</code> and assign them to your roles. In our example, they&#39;re the ones that end by <code>_photo_galleries</code>.</p><p><img src="`+k+'" alt="Custom Content Type Capabilities Edition"></p><p>At this point, you&#39;ll be able to create new photo galleries, as new menu items appeared.</p><p><img src="'+d+`" alt="Custom Content Type Menu"></p><h2 id="create-the-template-for-a-single-entity" tabindex="-1"><a class="header-anchor" href="#create-the-template-for-a-single-entity" aria-hidden="true">#</a> Create the template for a single entity</h2><p>By default, the template used by our new content type is <code>content/single.html.twig</code>.</p><p>Let&#39;s make a specific template. Create a file in <code>templates/theme/photo_gallery/single.html.twig</code>:</p><div class="language-twig ext-twig line-numbers-mode"><pre class="language-twig"><code><span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">extends</span> N9_base_template<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token delimiter punctuation">%}</span></span>

<span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">block</span> body <span class="token delimiter punctuation">%}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container standard-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>page-main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-5xl font-thin mb-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> entity<span class="token punctuation">.</span>title <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>This photo gallery was created on <span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> entity<span class="token punctuation">.</span>createdAt <span class="token operator">|</span> date <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> entity<span class="token punctuation">.</span>content <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>Done!</strong> All photo galleries will now be displayed using this template.</p><p>You can even override this template for a particular gallery by creating:</p><ul><li><code>templates/theme/photo_gallery/single_your-gallery-slug.html.twig</code></li><li><code>templates/theme/photo_gallery/single_125.html.twig</code> (change <code>125</code> with the ID)</li></ul><h2 id="create-the-template-of-the-index-page" tabindex="-1"><a class="header-anchor" href="#create-the-template-of-the-index-page" aria-hidden="true">#</a> Create the template of the index page</h2><p>Now we need an index page listing all our galleries, just like a blog feed.</p><p>It will have a <code>page</code> content type but will a specific template.</p><p>First, let&#39;s create the template. Our template will be a list of entities, so it have to be a <code>index.html.twig</code> file for NumberNine to know it needs a paginated collection.</p><p>Create a file <code>templates/theme/photo_gallery/index.html.twig</code>:</p><div class="language-twig ext-twig line-numbers-mode"><pre class="language-twig"><code><span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">extends</span> N9_base_template<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token delimiter punctuation">%}</span></span>

<span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">block</span> body <span class="token delimiter punctuation">%}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container standard-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid grid-cols-4 gap-5 w-full<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blog-main col-span-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">for</span> photo_gallery <span class="token operator">in</span> entities <span class="token delimiter punctuation">%}</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> N9_entity_url<span class="token punctuation">(</span>photo_gallery<span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-xl font-bold mb-5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> photo_gallery<span class="token punctuation">.</span>title <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
            <span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">endfor</span> <span class="token delimiter punctuation">%}</span></span>
            <span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> N9_shortcode<span class="token punctuation">(</span><span class="token string"><span class="token punctuation">&#39;</span>[pagination]<span class="token punctuation">&#39;</span></span><span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blog-sidebar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> N9_area<span class="token punctuation">(</span><span class="token string"><span class="token punctuation">&#39;</span>blog_sidebar<span class="token punctuation">&#39;</span></span><span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>You&#39;re almost done. In the administration panel, click <code>Pages &gt; Add new</code> then go the the Classic Editor.</p><p>On the right sidebar, choose from the template list &quot;Photo galleries index page&quot; that now appears as your template exists.</p><p><img src="`+g+'" alt="Custom Content Type Custom Template"></p><p>Set status to <code>Publish</code> and save the page.</p><p><strong>Done!</strong> Visit your page to see the paginated list of galleries.</p><h2 id="add-new-tabs-to-the-admin-classic-editor" tabindex="-1"><a class="header-anchor" href="#add-new-tabs-to-the-admin-classic-editor" aria-hidden="true">#</a> Add new tabs to the admin classic editor</h2><h3 id="defining-extension-fields" tabindex="-1"><a class="header-anchor" href="#defining-extension-fields" aria-hidden="true">#</a> Defining extension fields</h3><p>Your new content type may come with some fields that you&#39;d like to let the user define. As an example, our <code>photo_gallery</code> content type could add these new custom fields:</p><ul><li><strong>Display type</strong>: a select control to choose among <code>Grid</code> and <code>Masonry</code></li><li><strong>Location</strong>: a text input control</li><li><strong>Photographer name</strong>: a text input control</li><li><strong>Date of shooting</strong>: a calendar control</li></ul>',37),x=n("First, let's create our custom form type. It's a regular "),q={href:"https://symfony.com/doc/current/form/create_custom_field_type.html",target:"_blank",rel:"noopener noreferrer"},E=n("Symfony form type"),C=n(". Create a file "),T=s("code",null,"src/Form/PhotoGalleryType.php",-1),N=n(" and copy the code below."),S=e(`<p>Make it extend <code>EditorExtensionType</code>, which will better integrate in the new tab visually, without label and extra padding.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Form</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Type<span class="token punctuation">\\</span>EditorExtensionType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>AbstractType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Extension<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Type<span class="token punctuation">\\</span>ChoiceType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>Extension<span class="token punctuation">\\</span>Core<span class="token punctuation">\\</span>Type<span class="token punctuation">\\</span>DateType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>FormBuilderInterface</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">PhotoGalleryType</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractType</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">buildForm</span><span class="token punctuation">(</span><span class="token class-name type-declaration">FormBuilderInterface</span> <span class="token variable">$builder</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$builder</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;display_mode&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">ChoiceType</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;choices&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
                    <span class="token string single-quoted-string">&#39;Grid&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;grid&#39;</span><span class="token punctuation">,</span>
                    <span class="token string single-quoted-string">&#39;Masonry&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;masonry&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;location&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;photographer_name&#39;</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;date_of_shooting&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">DateType</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
                <span class="token string single-quoted-string">&#39;widget&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;single_text&#39;</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;input&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;string&#39;</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;input_format&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Y-m-d&#39;</span><span class="token punctuation">,</span>
                <span class="token string single-quoted-string">&#39;required&#39;</span> <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name static-context">EditorExtensionType</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>Then we need to embed it. Create a class in <code>src/EditorExtension/PhotoGalleryEditorExtension.php</code>. Note that the namespace is not important, you can place this class wherever you want.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>Content<span class="token punctuation">\\</span>EditorForm</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Form<span class="token punctuation">\\</span>PhotoGalleryType</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Content<span class="token punctuation">\\</span>EditorExtensionBuilderInterface</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Content<span class="token punctuation">\\</span>EditorExtensionInterface</span><span class="token punctuation">;</span>

<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">PhotoGalleryEditorExtension</span> <span class="token keyword">implements</span> <span class="token class-name">EditorExtensionInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">build</span><span class="token punctuation">(</span><span class="token class-name type-declaration">EditorExtensionBuilderInterface</span> <span class="token variable">$builder</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$builder</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token string single-quoted-string">&#39;gallery_options&#39;</span><span class="token punctuation">,</span>
                <span class="token class-name static-context">PhotoGalleryType</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;icon&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mdi-folder-multiple-image&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Finally, modify <code>src/EventSubscriber/ContentTypeRegistrationEventSubscriber.php</code> to add the reference to this extension class:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>
<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>EditorExtension<span class="token punctuation">\\</span>PhotoGalleryEditorExtension</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ContentTypeRegistrationEvent</span> <span class="token variable">$event</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
<span class="token punctuation">{</span>
    <span class="token variable">$event</span><span class="token operator">-&gt;</span><span class="token function">addContentType</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">ContentType</span><span class="token punctuation">(</span>
            <span class="token punctuation">[</span>
                <span class="token comment">// ...</span>
                <span class="token string single-quoted-string">&#39;editor_extension&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">PhotoGalleryEditorExtension</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>Done!</strong> As a result, your admin now looks like this:</p><p><img src="`+m+`" alt="Custom Content Type Tab Form"></p><h3 id="using-extension-fields" tabindex="-1"><a class="header-anchor" href="#using-extension-fields" aria-hidden="true">#</a> Using extension fields</h3><p>Once your data is saved, it&#39;s transformed into custom fields. They&#39;re stored with this format: <code>extension.name_of_the_tab.name_of_the_field</code>.</p><p>In our example, we can display the date of shooting with:</p><div class="language-twig ext-twig line-numbers-mode"><pre class="language-twig"><code><span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> entity<span class="token punctuation">.</span>getCustomField<span class="token punctuation">(</span><span class="token string"><span class="token punctuation">&#39;</span>extension.gallery_options.date_of_shooting<span class="token punctuation">&#39;</span></span><span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Or we can retrieve all fields of this extension with:</p><div class="language-twig ext-twig line-numbers-mode"><pre class="language-twig"><code><span class="token twig language-twig"><span class="token delimiter punctuation">{%</span> <span class="token tag-name keyword">set</span> fields <span class="token operator">=</span> entity<span class="token punctuation">.</span>getCustomFieldsStartingWith<span class="token punctuation">(</span><span class="token string"><span class="token punctuation">&#39;</span>extension.gallery_options.<span class="token punctuation">&#39;</span></span><span class="token punctuation">)</span> <span class="token delimiter punctuation">%}</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="add-new-sidebar-components-to-the-admin-classic-editor" tabindex="-1"><a class="header-anchor" href="#add-new-sidebar-components-to-the-admin-classic-editor" aria-hidden="true">#</a> Add new sidebar components to the admin classic editor</h2><p>Alternatively, you could want a sidebar card instead of a tab.</p><p>Simple, just modify your <code>src/EditorExtension/PhotoGalleryEditorExtension.php</code> file like this:</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">PhotoGalleryEditorExtension</span> <span class="token keyword">implements</span> <span class="token class-name">EditorExtensionInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">build</span><span class="token punctuation">(</span><span class="token class-name type-declaration">EditorExtensionBuilderInterface</span> <span class="token variable">$builder</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$builder</span>
            <span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token string single-quoted-string">&#39;gallery_options&#39;</span><span class="token punctuation">,</span>
                <span class="token class-name static-context">PhotoGalleryType</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;icon&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mdi-folder-multiple-image&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token class-name static-context">EditorExtensionBuilderInterface</span><span class="token operator">::</span><span class="token constant">COMPONENT_TYPE_SIDEBAR</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>Done!</strong> Check it out:</p><p><img src="`+b+'" alt="Custom Content Type Sidebar Form"></p>',20);function A(I,F){const p=a("RouterLink"),o=a("ExternalLinkIcon");return c(),i(r,null,[y,s("p",null,[w,t(p,{to:"/developers/architecture/content-types.html"},{default:u(()=>[f]),_:1}),_]),v,s("p",null,[x,s("a",q,[E,t(o)]),C,T,N]),S],64)}var D=l(h,[["render",A]]);export{D as default};

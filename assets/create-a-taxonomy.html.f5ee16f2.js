import{_ as n,o as a,c as s,e}from"./app.6b5c2181.js";const t="/assets/howto_taxonomy.105cb930.jpg",p={},o=e(`<h1 id="create-a-taxonomy" tabindex="-1"><a class="header-anchor" href="#create-a-taxonomy" aria-hidden="true">#</a> Create a taxonomy</h1><p>You may want to add some taxonomies to your custom content types or to built-in content types. This is done simply by creating fixtures.</p><h2 id="add-a-fixture" tabindex="-1"><a class="header-anchor" href="#add-a-fixture" aria-hidden="true">#</a> Add a fixture</h2><p>As an example we&#39;ll create a <code>Tag</code> taxonomy for <code>page</code> content type, which doesn&#39;t have taxonomies by default.</p><p>Create a class in <code>src/DataFixtures/TaxonomyFixtures.php</code> file.</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\\</span>DataFixtures</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FixturesBundle<span class="token punctuation">\\</span>Fixture</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>Bundle<span class="token punctuation">\\</span>FixturesBundle<span class="token punctuation">\\</span>FixtureGroupInterface</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>Persistence<span class="token punctuation">\\</span>ObjectManager</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>Taxonomy</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">NumberNine<span class="token punctuation">\\</span>Repository<span class="token punctuation">\\</span>TaxonomyRepository</span><span class="token punctuation">;</span>

<span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">TaxonomyFixtures</span> <span class="token keyword">extends</span> <span class="token class-name">Fixture</span> <span class="token keyword">implements</span> <span class="token class-name">FixtureGroupInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name type-declaration">TaxonomyRepository</span> <span class="token variable">$taxonomyRepository</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">load</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ObjectManager</span> <span class="token variable">$manager</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">createPageTag</span><span class="token punctuation">(</span><span class="token variable">$manager</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$manager</span><span class="token operator">-&gt;</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">createPageTag</span><span class="token punctuation">(</span><span class="token class-name type-declaration">ObjectManager</span> <span class="token variable">$manager</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">taxonomyRepository</span><span class="token operator">-&gt;</span><span class="token function">findOneByName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;page_tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token variable">$taxonomy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Taxonomy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;page_tag&#39;</span><span class="token punctuation">)</span>
            <span class="token operator">-&gt;</span><span class="token function">setContentTypes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;page&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">;</span>

        <span class="token variable">$manager</span><span class="token operator">-&gt;</span><span class="token function">persist</span><span class="token punctuation">(</span><span class="token variable">$taxonomy</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">getGroups</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;app&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The new taxonomies will be automatically created at project installation.</p><p>To manually load them on an existing project, run the command below.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> php bin/console doctrine:fixtures:load <span class="token parameter variable">--append</span> <span class="token parameter variable">--group</span><span class="token operator">=</span>app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If you&#39;re not using Docker, strip the <code>docker compose exec php</code> part.</p></div><p>Once the taxonomy is inserted in the database, it will appear under in the content type menu.</p><p><img src="`+t+`" alt="Custom taxonomy"></p><h2 id="translate-a-taxonomy" tabindex="-1"><a class="header-anchor" href="#translate-a-taxonomy" aria-hidden="true">#</a> Translate a taxonomy</h2><p>Both singular and plural of taxonomies can be translated by adding the translations to <code>translations/messages.[locale].yml</code>.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># translations/messages.en.yml</span>
<span class="token key atrule">taxonomy</span><span class="token punctuation">:</span>
    <span class="token key atrule">page_tag</span><span class="token punctuation">:</span> custom page tag
    <span class="token key atrule">page_tags</span><span class="token punctuation">:</span> custom page tags
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Taxonomy translations are automatically placed in the <code>taxonomy</code> translation group.</p></div>`,16),c=[o];function i(l,u){return a(),s("div",null,c)}const d=n(p,[["render",i],["__file","create-a-taxonomy.html.vue"]]);export{d as default};

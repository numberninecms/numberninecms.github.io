import{_ as t,r,o as l,c as i,a as e,b as a,F as c,d as n,e as o}from"./app.c874ede5.js";const d={},p=e("h1",{id:"installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),n(" Installation")],-1),h=e("h2",{id:"docker-one-liner-installation-recommended",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-one-liner-installation-recommended","aria-hidden":"true"},"#"),n(" Docker one-liner installation (recommended)")],-1),u=e("p",null,"To install NumberNine, you need only Docker to be installed on your host.",-1),m=n("You "),b=e("strong",null,"don't need",-1),_=n(" to be familiar with Docker. Everything is taken care of for you. Just "),f={href:"https://www.docker.com/products/docker-desktop",target:"_blank",rel:"noopener noreferrer"},g=n("download and install it"),v=n("."),y=o(`<p>To create a new project, simply replace <code>myproject</code> by the name of your project and run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">docker</span> run --rm --pull<span class="token operator">=</span>always -t -e <span class="token assign-left variable">HOST_PWD</span><span class="token operator">=</span><span class="token environment constant">$PWD</span> <span class="token punctuation">\\</span>
    -v <span class="token environment constant">$PWD</span>:/srv/app -v /var/run/docker.sock:/var/run/docker.sock <span class="token punctuation">\\</span>
    numberninecms/installer myproject
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,2),k=n("Wait a couple of minutes. Done! Now visit "),w={href:"https://myproject.localhost/",target:"_blank",rel:"noopener noreferrer"},x=n("https://myproject.localhost/"),j=n("."),N=e("p",null,"If port 443 is unavailable, the installation process will automatically assign a free port to your app.",-1),D=e("h2",{id:"windows-linux-wsl-macos-manual-installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-linux-wsl-macos-manual-installation","aria-hidden":"true"},"#"),n(" Windows / Linux / WSL / macOS manual installation")],-1),S=e("p",null,[e("strong",null,"Requirements to install NumberNine:")],-1),L={href:"https://www.php.net/downloads.php",target:"_blank",rel:"noopener noreferrer"},R=n("PHP 8.1"),W=n(" or above, with "),q=e("code",null,"intl",-1),P=n(", "),T=e("code",null,"gd",-1),V=n(", "),E=e("code",null,"exif",-1),I=n(", "),B=e("code",null,"sysvsem",-1),C=n(" extensions ("),O=e("code",null,"redis",-1),Y=n(" too if you want to use redis)"),A={href:"https://www.mysql.com/downloads/",target:"_blank",rel:"noopener noreferrer"},F=n("MySQL 8.0"),H=n(" or above"),$={href:"https://getcomposer.org/download/",target:"_blank",rel:"noopener noreferrer"},G=n("Composer 2"),J={href:"https://symfony.com/download",target:"_blank",rel:"noopener noreferrer"},M=n("Symfony executable"),Q=o(`<h3 id="create-the-project" tabindex="-1"><a class="header-anchor" href="#create-the-project" aria-hidden="true">#</a> Create the project</h3><p>To create a new project with NumberNine, run the following commands:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>symfony new myproject --full
<span class="token builtin class-name">cd</span> myproject
<span class="token function">composer</span> config extra.symfony.allow-contrib <span class="token boolean">true</span>
<span class="token function">composer</span> req numberninecms/numbernine
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="launch-installation" tabindex="-1"><a class="header-anchor" href="#launch-installation" aria-hidden="true">#</a> Launch installation</h3><p>Go to your new project root and run:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/console assets:install public --symlink
bin/console numbernine:install
bin/console doctrine:database:create
bin/console doctrine:migrations:diff
bin/console doctrine:migrations:migrate
bin/console doctrine:fixtures:load
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="run-the-server" tabindex="-1"><a class="header-anchor" href="#run-the-server" aria-hidden="true">#</a> Run the server</h3><p>Now launch the local server and visit your website.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>symfony local:server:ca:install
symfony serve -d
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,9),U=n("You're done. Visit "),z={href:"https://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},K=n("https://localhost:8080/"),X=n(" or the given URL if different."),Z=o(`<h3 id="optional-redis-extension" tabindex="-1"><a class="header-anchor" href="#optional-redis-extension" aria-hidden="true">#</a> Optional: Redis extension</h3><p>Assuming you&#39;ve got Redis installed, run these commands:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">composer</span> req numberninecms/redis
bin/console numbernine:install:redis
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Answer the questions, then clear your Symfony cache:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>bin/console cache:clear
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Done! Your Symfony cache and sessions will now be handled through Redis.</p>`,6);function ee(ne,se){const s=r("ExternalLinkIcon");return l(),i(c,null,[p,h,u,e("p",null,[m,b,_,e("a",f,[g,a(s)]),v]),y,e("p",null,[k,e("a",w,[x,a(s)]),j]),N,D,S,e("ul",null,[e("li",null,[e("a",L,[R,a(s)]),W,q,P,T,V,E,I,B,C,O,Y]),e("li",null,[e("a",A,[F,a(s)]),H]),e("li",null,[e("a",$,[G,a(s)])]),e("li",null,[e("a",J,[M,a(s)])])]),Q,e("p",null,[U,e("a",z,[K,a(s)]),X]),Z],64)}var oe=t(d,[["render",ee]]);export{oe as default};

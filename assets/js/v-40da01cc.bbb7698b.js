"use strict";(self.webpackChunknumberninecms_docs=self.webpackChunknumberninecms_docs||[]).push([[513],{950:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-40da01cc",path:"/developers/docker.html",title:"Docker services",lang:"en-US",frontmatter:{prev:"/developers/first-steps.md",next:"/developers/architecture/symfony.md"},excerpt:"",headers:[{level:2,title:"PHP",slug:"php",children:[]},{level:2,title:"Nginx",slug:"nginx",children:[]},{level:2,title:"MySQL",slug:"mysql",children:[]},{level:2,title:"Blackfire",slug:"blackfire",children:[]},{level:2,title:"Redis",slug:"redis",children:[]},{level:2,title:"Maildev",slug:"maildev",children:[]}],filePathRelative:"developers/docker.md",git:{updatedTime:1644563342e3}}},3999:(e,n,a)=>{a.r(n),a.d(n,{default:()=>I});var s=a(6252);const l=(0,s.uE)('<h1 id="docker-services" tabindex="-1"><a class="header-anchor" href="#docker-services" aria-hidden="true">#</a> Docker services</h1><p>NumberNine&#39;s default installation relies on Docker to create a fully operational Docker development environment.</p><p>If you&#39;re not already familiar with Docker, see it as a kind of WAMP, XAMPP, MAMP, Laragon or any bundled development tool. Although you shouldn&#39;t need too much of Docker knowledge to work on your NumberNine project, it may come handy when troubleshooting. See below some command examples that should get you started quickly.</p><p>This is the list of the installed services.</p><h2 id="php" tabindex="-1"><a class="header-anchor" href="#php" aria-hidden="true">#</a> PHP</h2><p>The PHP container is loaded with some useful extensions and development tools.</p><ul><li>PHP 8.1</li><li>APCu</li><li>Xdebug 3</li><li>Composer 2</li><li>GNU Make</li><li>OPcache</li><li>Cachetool (clear OPcache and ACPu from CLI)</li><li>Blackfire probe</li></ul><p>Connect to the container using this command:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose exec php bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You&#39;ll see a bash prompt inside which you can run Symfony or Cachetool commands. Type <code>exit</code> to return to your terminal session.</p><p>Alternatively, if you just want to run a single command, use this syntax:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose exec php [here the Linux command you want to run]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>For example:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose exec php bin/console list\ndocker-compose exec php composer update\ndocker-compose exec php cachetool opcache:status\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><p>Nginx is running with a SSL connection on localhost. A self-signed certificate is created during installation.</p><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><p>NumberNine is specifically designed to run on MySQL, taking advantage of the JSON features. Although it should work fine on MariaDB or SQLite, it hasn&#39;t been tested and it&#39;s not recommended to change.</p><p>MySQL is running in version 8.</p><h2 id="blackfire" tabindex="-1"><a class="header-anchor" href="#blackfire" aria-hidden="true">#</a> Blackfire</h2>',20),r=(0,s.Uk)("To make Blackfire work, you need to register an account on "),i={href:"https://blackfire.io",target:"_blank",rel:"noopener noreferrer"},t=(0,s.Uk)("blackfire.io"),o=(0,s.Uk)("."),c=(0,s.Uk)("Once your account is created, create 4 environment variables in your "),p=(0,s._)("code",null,"~/.bashrc",-1),d=(0,s.Uk)(" file with the values found in "),u={href:"https://blackfire.io/my/settings/credentials",target:"_blank",rel:"noopener noreferrer"},h=(0,s.Uk)("your account settings"),m=(0,s.Uk)("."),b=(0,s.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_CLIENT_ID</span><span class="token operator">=</span>yourkey\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_CLIENT_TOKEN</span><span class="token operator">=</span>yourkey\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_SERVER_ID</span><span class="token operator">=</span>yourkey\n<span class="token builtin class-name">export</span> <span class="token assign-left variable">BLACKFIRE_SERVER_TOKEN</span><span class="token operator">=</span>yourkey\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Modify <code>docker-compose.yml</code> to add this key under <code>blackfire</code> service (leave the tildes):</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>    <span class="token key atrule">blackfire</span><span class="token punctuation">:</span>\n        <span class="token comment"># ...</span>\n        <span class="token key atrule">environment</span><span class="token punctuation">:</span>\n            <span class="token key atrule">BLACKFIRE_CLIENT_ID</span><span class="token punctuation">:</span> <span class="token null important">~</span>\n            <span class="token key atrule">BLACKFIRE_CLIENT_TOKEN</span><span class="token punctuation">:</span> <span class="token null important">~</span>\n            <span class="token key atrule">BLACKFIRE_SERVER_ID</span><span class="token punctuation">:</span> <span class="token null important">~</span>\n            <span class="token key atrule">BLACKFIRE_SERVER_TOKEN</span><span class="token punctuation">:</span> <span class="token null important">~</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',3),k=(0,s.Uk)("Finally, "),g={href:"https://blackfire.io/docs/profiling-cookbooks/profiling-http-via-browser",target:"_blank",rel:"noopener noreferrer"},f=(0,s.Uk)("install the Chrome or Firefox extension"),v=(0,s.Uk)(" and you're ready to profile your website."),y=(0,s.uE)('<h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><p>Symfony sessions and app cache is stored in a Redis database. If you need to clear the Redis cache, run this command:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose exec redis redis-cli flushall\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="maildev" tabindex="-1"><a class="header-anchor" href="#maildev" aria-hidden="true">#</a> Maildev</h2>',4),x=(0,s.Uk)("As a mail catcher, NumberNine is bundled with Maildev which is a joy to use. By default, the mailbox interface will be running on port "),_={href:"http://localhost:8010/",target:"_blank",rel:"noopener noreferrer"},E=(0,s.Uk)("http://localhost:8010/"),N=(0,s.Uk)(" unless you change the port in "),w=(0,s._)("code",null,"docker-compose.yml",-1),C=(0,s.Uk)("."),L=(0,s._)("p",null,"Every mail sent by NumberNine will appear in your Maildev inbox.",-1),R={},I=(0,a(3744).Z)(R,[["render",function(e,n){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[l,(0,s._)("p",null,[r,(0,s._)("a",i,[t,(0,s.Wm)(a)]),o]),(0,s._)("p",null,[c,p,d,(0,s._)("a",u,[h,(0,s.Wm)(a)]),m]),b,(0,s._)("p",null,[k,(0,s._)("a",g,[f,(0,s.Wm)(a)]),v]),y,(0,s._)("p",null,[x,(0,s._)("a",_,[E,(0,s.Wm)(a)]),N,w,C]),L],64)}]])}}]);